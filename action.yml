name: Set proxy
description: 
inputs:
  config:
    description: ''
    required: true
  redirect:
    description: ''
    required: false
  password:
    description: ''
    required: false
runs:
  using: "composite"
  steps:
    - name: Install dependencies
      if: inputs.password != ''
      shell: bash
      run: |
        sudo apt-get install python3
        pip install --upgrade git+https://github.com/w311ang/pytools.git@package
        pip install tenacity
    - name: Auth
      if: inputs.password != ''
      shell: python
      env:
        config: ${{ inputs.config }}
        host: ${{ inputs.redirect }}
        password: ${{ inputs.password }}
      run: |
        import json
        from pytools.pytools import pas
        from pytools.pytools import base64decode
        import os
        from tenacity import retry, wait_fixed, stop_after_attempt

        password=os.environ['password']
        host=os.environ['host']
        config=json.loads(base64decode(os.environ['config']))

        @retry(wait=wait_fixed(2),stop=stop_after_attempt(5))
        def main():
          if not host:
            url=config['server']+':'+str(config['server_port'])
          else:
            url=host+':'+str(config['server_port'])
          pas(url,password)

        main()
    - name: Install
      shell: bash
      env:
        config: ${{ inputs.config }}
      run: |
        sudo apt-get install shadowsocks-libev simple-obfs proxychains-ng
        sudo -E sh -c 'echo $config|base64 -d > /etc/shadowsocks-libev/client.json'
        sudo systemctl start shadowsocks-libev-local@client
        sleep 5s

        sudo sed -i 's/socks4 	127.0.0.1 9050/socks5 127.0.0.1 1080/g' /etc/proxychains4.conf
        sudo sed -i 's/#quiet_mode/quiet_mode/g' /etc/proxychains4.conf

        defaultdns=`grep "nameserver" /etc/resolv.conf`
        sudo sed -i "s/nameserver .*/nameserver 1.1.1.1/" /etc/resolv.conf
        #sudo sed -i "s/nameserver .*/$defaultdns/" /etc/resolv.conf

    - name: Test
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 60
        on_retry_command: |
          sudo systemctl restart shadowsocks-libev-local@client
          sleep 5s
        command: |
          systemctl status --no-pager shadowsocks-libev-local@client
          for i in {1..2}
          do
            proxychains curl -I -s --connect-timeout 5 https://example.com || (\
            echo connect error; \
            sleep 3s)
          done
          systemctl status --no-pager shadowsocks-libev-local@client
          proxychains curl -I -s --connect-timeout 5 https://example.com || (\
          echo connect error; \
          exit 1)
